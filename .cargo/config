[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "probe-run --chip STM32F412ZGTx --defmt"

rustflags = [
  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=-Tdefmt.x",

  # if you run into problems with LLD switch to the GNU linker by commenting out
  # this line
  # "-C", "linker=arm-none-eabi-ld",

  # if you need to link to pre-compiled C libraries provided by a C toolchain
  # use GCC as the linker by commenting out both lines above and then
  # uncommenting the three lines below
  # "-C", "linker=arm-none-eabi-gcc",
  # "-C", "link-arg=-Wl,-Tlink.x",
  # "-C", "link-arg=-nostartfiles",
]

[alias]
b = "build --release --bin loadstone --target thumbv7em-none-eabihf"
rb = "run --release --bin loadstone --target thumbv7em-none-eabihf"
sz = "size --release --bin loadstone --target thumbv7em-none-eabihf"
gen_blinky = "cargo objcopy --bin blinky --release --target thumbv7em-none-eabihf --features \"stm32f412\" -- -O binary blinky.bin"
gen_loadstone = "cargo objcopy --bin loadstone --release --target thumbv7em-none-eabihf --features \"stm32f412\" -- -O binary loadstone.bin"
st = "strip --bin loadstone --release --target thumbv7em-none-eabihf"
d = "doc --bin loadstone --release --target thumbv7em-none-eabihf --open"
