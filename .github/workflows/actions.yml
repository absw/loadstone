name: actions
on: [push, pull_request]
jobs:
  setup:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2

  tests:
    needs: setup
    container: eu.gcr.io/bluefire-ci/loadstone-build:latest
    runs-on: self-hosted
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      CARGO_TERM_VERBOSE: true
    steps:
      - name: Configure SSH
        run: |
          mkdir -p /home/user/.ssh/
          echo "${{ secrets.PATHFINDERDELL_KNOWN_HOSTS }}" >> /home/user/.ssh/known_hosts
          echo "${{ secrets.PATHFINDERDELL_PRIVATE_KEY }}" > /home/user/.ssh/id_rsa
          chmod 600 /home/user/.ssh/id_rsa
      - name: Tests
        env:
          LOADSTONE_CONFIG: ""
        run: cargo test

  # This job launches a few `cargo check` invocations using several config file samples, to exercise
  # the maximum amount of ports without taking time to compile final artifacts.
  sample_checks:
    needs: setup
    container: eu.gcr.io/bluefire-ci/loadstone-build:latest
    runs-on: self-hosted
    env:
      CARGO_NET_GIT_FETCH_WITH_CLI: true
      CARGO_TERM_VERBOSE: true
    steps:
      - name: Configure SSH
        run: |
          mkdir -p /home/user/.ssh/
          echo "${{ secrets.PATHFINDERDELL_KNOWN_HOSTS }}" >> /home/user/.ssh/known_hosts
          echo "${{ secrets.PATHFINDERDELL_PRIVATE_KEY }}" > /home/user/.ssh/id_rsa
          chmod 600 /home/user/.ssh/id_rsa
      - name: Check sample stm32f4 build with external flash
        env:
          SCRIPT_MODE: true
          LOADSTONE_CONFIG: "(port:Stm32F412,memory_configuration:(internal_memory_map:(bootloader_location:134217728,bootloader_length_kb:64,banks:[(start_address:134283264,size_kb:460,),(start_address:134754304,size_kb:16,),],bootable_index:Some(1),),external_memory_map:(banks:[(start_address:0,size_kb:4,),],),external_flash:Some((name:\"Micronn25q128a\",internal:false,start:0,end:16777215,region_size:4096,)),golden_index:Some(2),),feature_configuration:(serial:Enabled(recovery_enabled:true,tx_pin:(peripheral:\"USART2\",bank:'d',index:5,af_index:7,),rx_pin:(peripheral:\"USART2\",bank:'d',index:6,af_index:7,),),boot_metrics:Disabled,),security_configuration:(security_mode:Crc,verifying_key_raw:\"\",),)"
        run: cargo check --features 'stm32f412' --target thumbv7em-none-eabihf
      - name: Check sample stm32f4 build without external flash
        env:
          SCRIPT_MODE: true
          LOADSTONE_CONFIG: "(port:Stm32F412,memory_configuration:(internal_memory_map:(bootloader_location:134217728,bootloader_length_kb:64,banks:[(start_address:134283264,size_kb:460,),(start_address:134754304,size_kb:16,),],bootable_index:Some(1),),external_memory_map:(banks:[],),external_flash:None,golden_index:Some(2),),feature_configuration:(serial:Enabled(recovery_enabled:false,tx_pin:(peripheral:\"USART2\",bank:'d',index:5,af_index:7,),rx_pin:(peripheral:\"USART2\",bank:'d',index:6,af_index:7,),),boot_metrics:Disabled,),security_configuration:(security_mode:Crc,verifying_key_raw:\"\",),)"
        run: cargo check --features 'stm32f412' --target thumbv7em-none-eabihf
      - name: Check sample wgm160p build
        env:
          SCRIPT_MODE: true
          LOADSTONE_CONFIG: "(port:Wgm160P,memory_configuration:(internal_memory_map:(bootloader_location:0,bootloader_length_kb:42,banks:[(start_address:45056,size_kb:250,),],bootable_index:Some(0),),external_memory_map:(banks:[],),external_flash:None,golden_index:Some(3),),feature_configuration:(serial:Disabled,boot_metrics:Enabled(timing:false,),),security_configuration:(security_mode:Crc,verifying_key_raw:\"\",),)"
        run: cargo check --features 'wgm160p' --target thumbv7em-none-eabihf
